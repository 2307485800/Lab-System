<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tyut.selab.vote.mapper.FindInfoDBMapper">
    <resultMap id="VoteInfo" type="tyut.selab.vote.domain.po.VoteInfo">
        <id property="id" column="id"/>
        <result property="userIds" column="user_id" typeHandler="tyut.selab.vote.config.jdbc.handler.userIdJandler"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="status" column="status"/>
        <result property="deadline" column="deadline"/>
        <result property="createTime" column="create_time"/>
    </resultMap>
    <resultMap id="VoteResult" type="tyut.selab.vote.domain.po.VoteResult">
        <id property="id" column="id"/>
        <result property="voteOptionId" column="vote_option_id"/>
        <result property="userIds" column="user_id" typeHandler="tyut.selab.vote.config.jdbc.handler.userIdJandler"/>
        <result property="content" column="content"/>
        <result property="isEnable" column="isEnable"/>
        <result property="weight" column="weight"/>
        <result property="createTime" column="creat_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    <resultMap id="PoVoteOption" type="tyut.selab.vote.domain.po.PoVoteOption">
        <id property="id" column="id"/>
        <result property="parentId" column="parent_id"/>
        <result property="voteId" column="vote_id"/>
        <result property="optionType" column="option_type"/>
        <result property="content" column="content"/>
    </resultMap>
    <update id="updateVoteInfoById">
        update selab_vote_info
        <set>
            status = #{status}
        </set>
        where id = #{id}
    </update>
    <update id="finishVote">
        update selab_vote_info set deadline = #{nowDate} where id = #{id}
    </update>
    <select id="findVoteInfoById" resultType="tyut.selab.vote.domain.po.VoteInfo">
        select * from selab_vote_info where id = #{id}
    </select>
    <select id="getOptionId" resultType="VoteResult" resultMap="VoteResult">
        select * from selab_vote_result
    </select>
<!--    where user_id = #{userId}-->

    <!--    List<VoteResult>displayVoteUser(@Param("optionId")List<PoVoteOption> optionId);-->
    <select id="displayVoteUser" resultType="VoteResult" resultMap="VoteResult">
        select user_id from selab_vote_result
        where vote_option_id in
        <foreach collection="optionId" item="op" open="(" separator="," close=")">
            #{op.id}
        </foreach>
    </select>
    <!--    List<VoteResult>displayVoteUsers(@Param("optionId")Long optionId);-->
    <select id="displayVoteUsers" resultType="VoteResult" resultMap="VoteResult">
        select user_id from selab_vote_result where vote_option_id = #{optionId}
    </select>
    <select id="getVoteId" resultType="VoteOption" resultMap="PoVoteOption">
        select vote_id from selab_vote_option
        where id in
        <foreach collection="optionIds" item="op" open="(" separator="," close=")">
            #{op.voteOptionId}
        </foreach>
        group by vote_id
    </select>
    <!--List<PoVoteOption>getVoteOptionByParentId(@Param("parentId")Long parentId);-->
    <select id="getVoteOptionByParentId" resultType="PoVoteOption" resultMap="PoVoteOption">
        select * from selab_vote_option where parent_id = #{parentId}
    </select>

    <select id="displayAllVote" resultType="VoteInfo" resultMap="VoteInfo">
        select * from selab_vote_info
    </select>
    <select id="displayMyHistoryVote" resultType="VoteInfo" resultMap="VoteInfo">
        select * from selab_vote_info
        where id in
        <foreach collection="voteId" item="vote" open="(" separator="," close=")">
            #{vote.voteId}
        </foreach>
    </select>
    <select id="displayMyStartVote" resultType="VoteInfo" resultMap="VoteInfo">
        select * from selab_vote_info
    </select>
    <!--     List<PoVoteOption>getVoteOptions(@Param("voteId")Long voteTd);-->
    <select id="getVoteOptions" resultType="PoVoteOption" resultMap="PoVoteOption">
        select * from  selab_vote_option where vote_id = #{voteId} AND parent_id = -1
    </select>
    <!--    VoteInfo getVoteByVoteId(@Param("voteId")Long voteTd);-->
    <select id="getVoteByVoteId" resultType="VoteInfo" resultMap="VoteInfo">
        select * from selab_vote_info where id = #{voteId} AND status != -1
    </select>
    <!--    List<VoteResult>getResByUserIdAndOptionId(@Param("userId")String userId, @Param("optionIds")List<PoVoteOption>optionsId);-->
    <select id="getResByUserIdAndOptionId" resultType="VoteResult" resultMap="VoteResult">
        select * from selab_vote_result where vote_option_id in
        <foreach collection="optionIds" item="optionId" open="(" separator="," close=")">
            #{optionId.id}
        </foreach>
    </select>
<!--    select * from ()as total where user_id = #{userId}-->

    <!--    List<PoVoteOption>getVoteOptionByVoteId(@Param("voteId")Long voteTd);-->
    <select id="getVoteOptionByVoteId" resultType="PoVoteOption" resultMap="PoVoteOption">
        select * from selab_vote_option where vote_id = #{voteId} AND parent_id != -1
    </select>
    <!--    List<VoteInfo>displayAllUsefulVote(@Param("userId")String userId);-->
    <select id="displayAllUsefulVote" resultType="VoteInfo" resultMap="VoteInfo">
        select * from selab_vote_info where status = 0
    </select>
    <!--    int theNumOfJoinVote(@Param("voteId")Long voteId);-->
    <select id="theNumOfJoinVote" resultType="int" >
        select count(*) from (
            select user_id from selab_vote_result where vote_option_id in(
            select id from selab_vote_option where parent_id = (
            select id from selab_vote_option where vote_id = #{voteId} AND parent_id = -1 limit 1
            )
            )group by user_id
            )as total
    </select>
<!--    void updateStatus(@Param("voteId")Long voteId);-->
    <update id="updateStatus">
        update selab_vote_info set status = 1 where id = #{voteId}
    </update>
    <!--    int getRoleById(int id);-->
    <select id="getRoleById" resultType="int">
        select role_id from sys_user_role where user_id = #{id}
    </select>

    <select id="isJoin" resultMap="VoteResult">
            select user_id from selab_vote_result where vote_option_id in(
                select id from selab_vote_option where vote_id = #{voteId} AND parent_id != -1
                )
    </select>
<!-- select count(*) from ()as total where user_id = #{userId}  -->

    <!-- Date getCreateTimeById(@Param("voteId")Long voteId)-->
    <select id="getDeadLineById" resultType="Date">
        select deadline from selab_vote_info where id = #{voteId}
    </select>
</mapper>